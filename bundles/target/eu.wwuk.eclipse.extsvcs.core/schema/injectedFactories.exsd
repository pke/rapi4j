<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="eu.wwuk.eclipse.extsvcs.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="eu.wwuk.eclipse.extsvcs.core" id="injectedFactories" name="Service-Injected Factory"/>
      </appinfo>
      <documentation>
         This extension point is used to define factories that can be used by other extensions to enable integration between extensions and OSGi Services.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="factory" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="factory">
      <complexType>
         <sequence>
            <element ref="property" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="service" minOccurs="0" maxOccurs="1"/>
            <element ref="reference" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The identity of this factory. This identity may be used as the parameter to the InjectionFactory class when used in the &lt;samp&gt;class&lt;/samp&gt; attribute of another extension.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The Java class to be instantiated by this factory, which must have a zero-argument constructor and may optionally implement the &lt;samp&gt;InjectedComponent&lt;/samp&gt; interface.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="service">
      <complexType>
         <sequence>
            <element ref="provide" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
      </complexType>
   </element>

   <element name="provide">
      <complexType>
         <attribute name="interface" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="java"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="reference">
      <annotation>
         <documentation>
            Defines a reference to a service.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  The name of the reference, which can be used by components to locate service instances using the &lt;samp&gt;ComponentContext.locateService(String)&lt;/samp&gt; method. This attribute is optional but if not defined then the class name of the service interface will be taken as the name for the reference.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="interface" type="string" use="required">
            <annotation>
               <documentation>
                  The Java interface name of the service to bind. This attribute is required.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="filter" type="string">
            <annotation>
               <documentation>
                  An optional additional filter that may be used to narrow down the set of services that may be bound by this reference. It is in the LDAP format used by all OSGi filter strings.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="cardinality" use="default" value="single">
            <annotation>
               <documentation>
                  The cardinality of the reference: either &lt;samp&gt;single&lt;/samp&gt; or &lt;samp&gt;multiple&lt;/samp&gt;.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="single">
                  </enumeration>
                  <enumeration value="multiple">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="bind" type="string">
            <annotation>
               <documentation>
                  The name of the bind method in the component class. This attribute is optional. If the interface name is &lt;samp&gt;org.mypackage.Foo&lt;/samp&gt; then the defeault bind method name will be &lt;samp&gt;setFoo&lt;/samp&gt; for single-cardinality references or &lt;samp&gt;addFoo&lt;/samp&gt; for multiple-cardinality.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="unbind" type="string">
            <annotation>
               <documentation>
                  The name of the unbind method in the component class. This attribute is optional. If the interface name is &lt;samp&gt;org.mypackage.Foo&lt;/samp&gt; then the default unbind method name will be &lt;samp&gt;unsetFoo&lt;/samp&gt; for single-cardinality references or &lt;samp&gt;removeFoo&lt;/samp&gt; for multiple-cardinality.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="property">
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         1.0.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         &lt;p&gt;
&lt;pre&gt;
 &lt;!-- Factory Declaration --&gt;
 &lt;extension
       point=&quot;eu.wwuk.eclipse.extsvcs.core.injectedFactories&quot;&gt;
    &lt;factory
          id=&quot;logReaderView&quot;
          class=&quot;org.example.view.LogReaderView&quot;&gt;
       &lt;reference
             interface=&quot;org.osgi.service.log.LogReaderService&quot;&gt;
       &lt;/reference&gt;
    &lt;/factory&gt;
 &lt;/extension&gt;

 &lt;!-- Standard View Declaration --&gt;
 &lt;extension
       point=&quot;org.eclipse.ui.views&quot;&gt;
    &lt;view
          id=&quot;org.example.views.logView&quot;
          class=&quot;eu.wwuk.eclipse.extsvcs.core.InjectionFactory:logReaderView&quot;
          name=&quot;Log Reader&quot;
          icon=&quot;icons/log.gif&quot;&gt;
    &lt;/view&gt;
 &lt;/extension&gt;
&lt;/pre&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         The value of the &lt;samp&gt;class&lt;/samp&gt; attribute may be any class owned by or visible to the declaring bundle and it must have an accessible, zero-argument constructor.

&lt;p&gt;The class &lt;em&gt;may&lt;/em&gt; also choose to implement the &lt;samp&gt;InjectedComponent&lt;/samp&gt; interface if it wishes to receive a &lt;samp&gt;ComponentContext&lt;/samp&gt; reference, which it can use to perform simple service lookups.&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         No factories are pre-defined by the core bundle.
      </documentation>
   </annotation>


</schema>
